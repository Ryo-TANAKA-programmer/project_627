---
title: "STAT-627_PRJ"
format: pdf
editor: visual
---


```{r}
library(dplyr)
library(tidyverse)
library(leaps)
library(rms)
```

# data preparation

```{r}
setwd(getwd()) # setting working directory for users

diabetes_data <- read_csv("Dataset_of_Diabetes.csv")
str(diabetes_data)

diabetes_data$BMI_Category <- cut(diabetes_data$BMI,
                         breaks = c(-Inf, 18.5, 24.9, 29.9, Inf),
                         labels = c("Underweight", "Normal", "Overweight", "Obese"))

```

#Data Cleaning

```{r}
## checking consistency of the levels in "Gender", "CLASS","BMI_Category"
unique_values <- lapply(diabetes_data[c("Gender", "CLASS","BMI_Category")], unique)
unique_values

## Fixing f = "F" and "N " = "N","Y "= "Y"
diabetes <- diabetes_data %>%
  mutate(across(c(3, 14), ~ recode(., "f" = "F", "N " = "N", "Y " = "Y")))

unique_values1 <- lapply(diabetes[c("Gender", "CLASS","BMI_Category")], unique)
unique_values1

# checking incomplete obs
diabetes <- diabetes %>%
  mutate(
    missing_count_SPS = rowSums(is.na(.[1:15])))

# Removing `P` in CLASS variable, ID and No.partition since we don't need them
diabetes <- diabetes[diabetes$CLASS != "P",]
diabetes <- diabetes[-c(1,2,13,16)]
```

# Summary of the entire Dataset

```{r}
summary(diabetes)
```

```{r}
# summary of BMI
BMI_summary <- diabetes %>%
  group_by(Gender, BMI_Category) %>%
  summarise(Count = n(), .groups = 'drop')
BMI_summary
```

```{r}
# Making CLASS factor
diabetes <- diabetes %>% 
  mutate(CLASS = as.factor(CLASS))
is.factor(diabetes$CLASS)
```


```{r}
gg_base <- ggplot(data = diabetes) 

  gg_base + geom_bar(mapping = aes(x = Gender,
                         fill = BMI_Category),
                     position = "fill") +
  theme_bw()
```

```{r}
gg_base + geom_bar(mapping = aes(x = Gender,
                         fill = CLASS),
                   position = "fill") +
  theme_bw()
```

```{r}
par(mfrow = c(5, 2))
diabetes_numeric_df <- diabetes[-c(1,12,13,14)]
for (col in colnames(diabetes_numeric_df)) {
  hist(diabetes_numeric_df[[col]], 
       main = col, 
       xlab = "")
}
```

```{r}
cor(diabetes_numeric_df)
```

-   Cr(Creatinine ratio) and Urea are categorized as highly correlated, therefore, we may want to deal with these variables. It is not surprising to see LDL and Cholesterole are also moderaly correlated.

```{r}
pairs(diabetes_numeric_df)
```

```{r}
diabetes$Gender <- as.factor(diabetes$Gender)
is.factor(diabetes$Gender)
full_reg <- glm(CLASS ~ .,
                family = "binomial",
                data = diabetes)
summary(full_reg) 
```

```{r}
plot(full_reg)
```

```{r}
# Removing non-significant variables

reduced_dia_reg <- glm(CLASS ~ Gender + HbA1c +
                         Chol + TG,
                       data = diabetes,
                       family = "binomial")
summary_reduced_reg <- summary(reduced_dia_reg)

```

```{r}
names(summary_reduced_reg)
```


## AIC

```{r}
AIC(reduced_dia_reg)
```


```{r}
subreg_reduced <- regsubsets(CLASS ~ Gender + HbA1c + Chol + TG, 
                        data = diabetes, 
                        method = "exhaustive")
summary_subreg_reduced <- summary(subreg_reduced)
summary_subreg_reduced$cp
summary_subreg_reduced$adjr2
summary_subreg_reduced$bic
```

